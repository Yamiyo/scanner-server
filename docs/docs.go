// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/blocks": {
            "get": {
                "description": "Get latest N blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get latest N blocks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request data format. Example: ` + "`" + `application/json;charset=utf-8` + "`" + `",
                        "name": "Content-Type",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "request chain ID with UUID format. Example: ` + "`" + `5d714332-60b4-451d-b45e-539f7b77f562` + "`" + `",
                        "name": "ChainID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Input limit. Example: 25",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/restctl.resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bo.GetBlockLatestNResp"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/blocks/:num": {
            "get": {
                "description": "Get blocks info by block number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get blocks info by block number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request data format. Example: ` + "`" + `application/json;charset=utf-8` + "`" + `",
                        "name": "Content-Type",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "request chain ID with UUID format. Example: ` + "`" + `5d714332-60b4-451d-b45e-539f7b77f562` + "`" + `",
                        "name": "ChainID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Input num. Example: ` + "`" + `34449189` + "`" + `",
                        "name": "num",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/restctl.resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/bo.GetBlockInfoResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/:txn_hash": {
            "get": {
                "description": "Get transaction info by txn hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "txn"
                ],
                "summary": "Get transaction info by txn hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request data format. Example: ` + "`" + `application/json;charset=utf-8` + "`" + `",
                        "name": "Content-Type",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "request chain ID with UUID format. Example: ` + "`" + `5d714332-60b4-451d-b45e-539f7b77f562` + "`" + `",
                        "name": "ChainID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Input txn_hash. Example: ` + "`" + `0x5510c3187af8f24ecfbd42af5c72cc76d070bcb4ab3ac98d5b4e12a15b04dda9` + "`" + `",
                        "name": "txn_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/restctl.resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/bo.GetTransactionInfoResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bo.GetBlockInfoResp": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string",
                    "example": "0x0000000"
                },
                "block_num": {
                    "type": "integer",
                    "example": 34449189
                },
                "block_time": {
                    "type": "integer",
                    "example": 1631534170
                },
                "parent_hash": {
                    "type": "string",
                    "example": "0x0000000"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "0x0000000",
                        "0x0000001",
                        "0x0000002"
                    ]
                }
            }
        },
        "bo.GetBlockLatestNResp": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string",
                    "example": "0x0000000"
                },
                "block_num": {
                    "type": "integer",
                    "example": 34449189
                },
                "block_time": {
                    "type": "integer",
                    "example": 1631534170
                },
                "parent_hash": {
                    "type": "string",
                    "example": "0x0000000"
                }
            }
        },
        "bo.GetTransactionInfoResp": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 34449189
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "from": {
                    "type": "string",
                    "example": "0x0000001"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bo.TransactionLog"
                    }
                },
                "nonce": {
                    "type": "string",
                    "example": "0x0000004"
                },
                "to": {
                    "type": "string",
                    "example": "0x0000002"
                },
                "tx_hash": {
                    "type": "string",
                    "example": "0x0000000"
                },
                "value": {
                    "type": "string",
                    "example": "0x0000003"
                }
            }
        },
        "bo.TransactionLog": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "0x0000006"
                },
                "index": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "restctl.meta": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string",
                    "example": "5d714332-60b4-451d-b45e-539f7b77f562"
                },
                "request_time": {
                    "type": "string",
                    "example": "2023-11-01T07:55:48.51208251Z"
                },
                "times": {
                    "type": "number",
                    "example": 0.22385625
                },
                "user_id": {
                    "type": "string",
                    "example": "5d714332-60b4-451d-b45e-539f7b77f562"
                }
            }
        },
        "restctl.resp": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/restctl.meta"
                },
                "msg_code": {
                    "type": "string",
                    "example": "invalidate_parameter"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Get block info",
            "name": "block"
        },
        {
            "description": "Get transaction info",
            "name": "transaction"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:12345",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "api-service: RESTFul API for portto homework.",
	Description:      "API Service provides web3 blocks & transactions info.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
