// Code generated by MockGen. DO NOT EDIT.
// Source: block_core.go

// Package mock_core is a generated GoMock package.
package mock_core

import (
	context "context"
	bo "portto-homework/internal/model/bo"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBlockCore is a mock of BlockCore interface.
type MockBlockCore struct {
	ctrl     *gomock.Controller
	recorder *MockBlockCoreMockRecorder
}

// MockBlockCoreMockRecorder is the mock recorder for MockBlockCore.
type MockBlockCoreMockRecorder struct {
	mock *MockBlockCore
}

// NewMockBlockCore creates a new mock instance.
func NewMockBlockCore(ctrl *gomock.Controller) *MockBlockCore {
	mock := &MockBlockCore{ctrl: ctrl}
	mock.recorder = &MockBlockCoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockCore) EXPECT() *MockBlockCoreMockRecorder {
	return m.recorder
}

// GetBlockInfo mocks base method.
func (m *MockBlockCore) GetBlockInfo(ctx context.Context, num uint64) (*bo.GetBlockInfoResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockInfo", ctx, num)
	ret0, _ := ret[0].(*bo.GetBlockInfoResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockInfo indicates an expected call of GetBlockInfo.
func (mr *MockBlockCoreMockRecorder) GetBlockInfo(ctx, num interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockInfo", reflect.TypeOf((*MockBlockCore)(nil).GetBlockInfo), ctx, num)
}

// GetBlockLatestN mocks base method.
func (m *MockBlockCore) GetBlockLatestN(ctx context.Context, n int) ([]*bo.GetBlockLatestNResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockLatestN", ctx, n)
	ret0, _ := ret[0].([]*bo.GetBlockLatestNResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockLatestN indicates an expected call of GetBlockLatestN.
func (mr *MockBlockCoreMockRecorder) GetBlockLatestN(ctx, n interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockLatestN", reflect.TypeOf((*MockBlockCore)(nil).GetBlockLatestN), ctx, n)
}
