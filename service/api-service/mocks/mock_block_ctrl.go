// Code generated by MockGen. DO NOT EDIT.
// Source: block_ctrl.go

// Package mock_restctl is a generated GoMock package.
package mock_restctl

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockBlockCtrl is a mock of BlockCtrl interface.
type MockBlockCtrl struct {
	ctrl     *gomock.Controller
	recorder *MockBlockCtrlMockRecorder
}

// MockBlockCtrlMockRecorder is the mock recorder for MockBlockCtrl.
type MockBlockCtrlMockRecorder struct {
	mock *MockBlockCtrl
}

// NewMockBlockCtrl creates a new mock instance.
func NewMockBlockCtrl(ctrl *gomock.Controller) *MockBlockCtrl {
	mock := &MockBlockCtrl{ctrl: ctrl}
	mock.recorder = &MockBlockCtrlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockCtrl) EXPECT() *MockBlockCtrlMockRecorder {
	return m.recorder
}

// GetBlockInfo mocks base method.
func (m *MockBlockCtrl) GetBlockInfo(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetBlockInfo", ctx)
}

// GetBlockInfo indicates an expected call of GetBlockInfo.
func (mr *MockBlockCtrlMockRecorder) GetBlockInfo(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockInfo", reflect.TypeOf((*MockBlockCtrl)(nil).GetBlockInfo), ctx)
}

// GetBlockLatestN mocks base method.
func (m *MockBlockCtrl) GetBlockLatestN(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetBlockLatestN", ctx)
}

// GetBlockLatestN indicates an expected call of GetBlockLatestN.
func (mr *MockBlockCtrlMockRecorder) GetBlockLatestN(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockLatestN", reflect.TypeOf((*MockBlockCtrl)(nil).GetBlockLatestN), ctx)
}
